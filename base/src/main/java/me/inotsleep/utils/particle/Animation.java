package me.inotsleep.utils.particle;

import me.inotsleep.utils.config.Comment;
import me.inotsleep.utils.config.Path;
import me.inotsleep.utils.config.SerializableObject;

import java.util.Map;

public class Animation extends SerializableObject {

    @Comment("This is animation object.")
    @Comment("Here you can create particle animation")
    @Comment(" ")
    @Comment("This is frame section.")
    @Comment("Each frame has parameters, that you want to configure")
    @Comment("Frame can have duration. Duration is time, that parameter will change.")
    @Comment("Each frame have its number. It can be only number.")
    @Comment("Frame can have **any** parameter")
    @Comment("Here's graphics example:")
    @Comment("0. ----*----*------------*")
    @Comment("1. *--------*------------*")
    @Comment("2. *--------------*-------")
    @Comment("3. -*-------*------------*")
    @Comment("4. ---*-------------------")
    @Comment(" ")
    @Comment("Number - parameter name")
    @Comment("1 Symbol - 1 tick")
    @Comment("* - parameter defenition position")
    @Comment(" ")
    @Comment("Results:")
    @Comment("Params 0, 1, 3: this params will slowly change their values each tick based on specified transition.")
    @Comment("Param 2: this param will slowly change its values until last defenition and will not change until all animation end")
    @Comment("Param 4: this param will never change because of no change is registered.")
    @Comment(" ")
    @Comment("Now about transition. Transition used: Cubic bezier transition.")
    @Comment("Generate it you can at: https://cubic-bezier.com/")
    @Comment("Thats all! Happy animating!")
    @Comment(" ")
    @Comment("* This comment will generate for each autogenerated animation and in case of config saving through plugin :) *")
    @Path("frames")
    public Map<String, Frame> frames;

    public Animation(Map<String, Frame> frames) {
        this.frames = frames;
    }
}
